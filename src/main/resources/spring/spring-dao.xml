<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--配置整合MyBatis过程-->
    <!--（1）配置数据库和Redis缓存相关参数-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="propertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:redis.properties</value>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <!--（2）配置数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池所需属性-->
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!--配置私有属性-->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <property name="autoCommitOnClose" value="false" />
        <property name="checkoutTimeout" value="0" />
        <!--当获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2" />
    </bean>
    <!--（3）配置SqlSessionFactory对象-->
    <bean id="sqlSessqionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!--扫描实体包，使用别名-->
        <property name="typeAliasesPackage" value="com.seckill.entity" />
        <!--扫描SQL配置文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>
    <!--（4）配置扫描DAO接口包，动态实现DAO接口并注入到Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入SqlSessionFactory对象-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessqionFactory" />
        <!--给出扫描DAO接口包-->
        <property name="basePackage" value="com.seckill.dao" />
    </bean>
    <!--注入RedisDao的对象-->
    <bean class="com.seckill.dao.cache.RedisDao" id="redisDao">
        <constructor-arg index="0" value="${redis.address}" />
        <constructor-arg index="1" value="${redis.port}" />
    </bean>
</beans>